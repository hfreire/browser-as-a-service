name: cd

on:
  release:
    types: [published]

jobs:
  deploy:

    runs-on: ubuntu-latest

    env:
      CI: true
      TF_IN_AUTOMATION: true
      VERSION_COMMIT: ${{ github.sha }}

    steps:
      - name: Set VERSION env var
        run: echo ::set-env name=VERSION::${GITHUB_REF##*/}
      - uses: actions/checkout@v1
        with:
          ref: ${{ github.ref }}
      - uses: actions/setup-node@v1
        with:
          node-version: 12.14
      - uses: azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build docker image
        run: npm run docker:build
      - name: Push docker image
        run: npm run docker:push
      - name: Setup terraform
        run: |
          curl -fSL "https://releases.hashicorp.com/terraform/0.12.18/terraform_0.12.18_linux_amd64.zip" -o terraform.zip && \
          echo "e7ebe3ca988768bffe0c239d107645bd53515354cff6cbe5651718195a151700 *terraform.zip" | sha256sum -c - && \
          sudo unzip -o -d /usr/local/bin/ terraform.zip
      - name: Deploy in AWS
        run: npm run deploy
        env:
          ANTIFRAGILE_INFRASTRUCTURE_DOMAIN_NAME: ${{ secrets.ANTIFRAGILE_INFRASTRUCTURE_DOMAIN_NAME }}
          ANTIFRAGILE_STATE_AWS_DYNAMODB_TABLE: ${{ secrets.ANTIFRAGILE_STATE_AWS_DYNAMODB_TABLE }}
          ANTIFRAGILE_STATE_AWS_REGION: ${{ secrets.ANTIFRAGILE_STATE_AWS_REGION }}
          ANTIFRAGILE_STATE_AWS_S3_BUCKET: ${{ secrets.ANTIFRAGILE_STATE_AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          TF_VAR_api_keys: ${{ secrets.TF_VAR_api_keys }}
